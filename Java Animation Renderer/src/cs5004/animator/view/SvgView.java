package cs5004.animator.view;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import cs5004.animator.model.ViewShape;


/**
 * A class to allow us to render SVG format by calling our mode.
 */
public class SvgView implements IView {

  /**
   * this class's object is generated by a ViewFactory that determines from console input that we
   * need an SVG output. we then send the data from main that was parsed from the console to this
   * class's constructor so it knows what to render. Besides this, all this class is meant to do is
   * write the generated text to a file, which is done in render.
   */

  private String outputFromModel;
  private String output;
  private String viewType;

  /**
   * Takes in the tick speed that the animation should be running at and the output directory.
   *
   * @param tickPerSec - the speed of the animation.
   * @param output     - the output location.
   */
  public SvgView(int tickPerSec, String output) {
    this.output = output;
    this.outputFromModel = "";
    this.viewType = "svg";


  }

  @Override
  public void render(String string) throws FileNotFoundException {
    try {

      FileOutputStream outputStream = new FileOutputStream(this.output);
      byte[] strToBytes = string.getBytes();
      outputStream.write(strToBytes);

      outputStream.close();
    } catch (IOException e) {
      throw new FileNotFoundException("couldn't find that file");
    }

  }

  @Override
  public void setVisible(boolean visibility) {
    /**
     * Will be implemented next week.
     */
  }

  @Override
  public String getViewType() {
    return this.viewType;
  }

  @Override
  public void renderList(List<ViewShape> shapes) {
    /**
     * not used.
     */

  }

  /**
   * Sets the outputfromModel text to be what was generated from the model.
   *
   * @param outputFromModel the text generated in the model to be in SVG format.
   */
  public void setText(String outputFromModel) {
    this.outputFromModel = outputFromModel;
  }

  /**
   * Returns the output address we should be making a file in.
   *
   * @return a String showing the output address.
   */
  public String getOutput() {
    return this.output;
  }
}
